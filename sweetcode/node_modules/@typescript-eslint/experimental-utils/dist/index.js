"use strict";
<<<<<<< HEAD
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
// TODO (#4139): Once typescript-eslint hits v7, this package will console.warn to switch...
__exportStar(require("@typescript-eslint/utils"), exports);
=======
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const ASTUtils = __importStar(require("./ast-utils"));
exports.ASTUtils = ASTUtils;
const ESLintUtils = __importStar(require("./eslint-utils"));
exports.ESLintUtils = ESLintUtils;
const JSONSchema = __importStar(require("./json-schema"));
exports.JSONSchema = JSONSchema;
const TSESLint = __importStar(require("./ts-eslint"));
exports.TSESLint = TSESLint;
const TSESLintScope = __importStar(require("./ts-eslint-scope"));
exports.TSESLintScope = TSESLintScope;
__export(require("./ts-estree"));
>>>>>>> 8aded176e2bf64ab331edd712b5a251ef6940ffa
//# sourceMappingURL=index.js.map