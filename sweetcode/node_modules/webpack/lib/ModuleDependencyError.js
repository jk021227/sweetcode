/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
<<<<<<< HEAD

=======
>>>>>>> 8aded176e2bf64ab331edd712b5a251ef6940ffa
"use strict";

const WebpackError = require("./WebpackError");

<<<<<<< HEAD
/** @typedef {import("./Dependency").DependencyLocation} DependencyLocation */
=======
>>>>>>> 8aded176e2bf64ab331edd712b5a251ef6940ffa
/** @typedef {import("./Module")} Module */

class ModuleDependencyError extends WebpackError {
	/**
	 * Creates an instance of ModuleDependencyError.
	 * @param {Module} module module tied to dependency
	 * @param {Error} err error thrown
<<<<<<< HEAD
	 * @param {DependencyLocation} loc location of dependency
=======
	 * @param {TODO} loc location of dependency
>>>>>>> 8aded176e2bf64ab331edd712b5a251ef6940ffa
	 */
	constructor(module, err, loc) {
		super(err.message);

		this.name = "ModuleDependencyError";
<<<<<<< HEAD
		this.details =
			err && !(/** @type {any} */ (err).hideStack)
				? /** @type {string} */ (err.stack).split("\n").slice(1).join("\n")
				: undefined;
		this.module = module;
		this.loc = loc;
		/** error is not (de)serialized, so it might be undefined after deserialization */
		this.error = err;

		if (err && /** @type {any} */ (err).hideStack && err.stack) {
			this.stack = /** @type {string} */ `${err.stack
				.split("\n")
				.slice(1)
				.join("\n")}\n\n${this.stack}`;
		}
=======
		this.details = err.stack
			.split("\n")
			.slice(1)
			.join("\n");
		this.module = module;
		this.loc = loc;
		this.error = err;
		this.origin = module.issuer;

		Error.captureStackTrace(this, this.constructor);
>>>>>>> 8aded176e2bf64ab331edd712b5a251ef6940ffa
	}
}

module.exports = ModuleDependencyError;
