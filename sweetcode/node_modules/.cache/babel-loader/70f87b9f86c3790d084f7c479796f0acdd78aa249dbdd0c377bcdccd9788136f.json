{"ast":null,"code":"var _jsxFileName = \"/Users/paulinewee/Desktop/girlhacks/sweetcode/sweetcode/src/components/townpage/RightField.js\",\n  _s = $RefreshSig$();\n// src/components/RightAbove.js\nimport React, { useEffect, useState } from 'react';\nimport Question from './Question'; // Import the Question component\nimport HintBit from './HintBit';\nimport QuestionBank from './QuestionBank'; // Import the QuestionBank component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RightAbove() {\n  _s();\n  var _questions$currentQue;\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const villagerNames = ['BUBBLES THE BUNNY', 'MELVIN THE MOOSE', 'FELICITY THE FOX', 'NEDDY THE NARWHAL', 'PIPPIN THE PENGUIN', 'SILLY SAMMY THE SLOTH', 'LUCY THE LEMUR', 'DIZZY THE DOLPHIN', 'GIGGLES THE GIRAFFE', 'WOBBLES THE WOMBAT'];\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch('/data/townQuestions.json'); // Fetch data from the JSON file\n        const data = await response.json();\n        setQuestions(data.townQuestions);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const handleNextQuestion = () => {\n    setCurrentQuestionIndex(prevIndex => (prevIndex + 1) % questions.length); // Loop back to start if at the end\n  };\n  const getRandomName = () => {\n    const randomIndex = Math.floor(Math.random() * villagerNames.length);\n    return villagerNames[randomIndex];\n  };\n  const randomVillagerName = getRandomName();\n  const [showHint, setShowHint] = useState(false); // State to control hint visibility\n\n  const toggleHint = () => {\n    setShowHint(prev => !prev); // Toggle the hint visibility\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[688px] ml-2 border-black border-2\",\n    children: [/*#__PURE__*/_jsxDEV(QuestionBank, {\n      questions: questions,\n      currentQuestionIndex: currentQuestionIndex,\n      onNext: handleNextQuestion,\n      randomVillagerName: randomVillagerName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HintBit, {\n      hint: (_questions$currentQue = questions[currentQuestionIndex]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.hint,\n      onToggleHint: toggleHint,\n      showHint: showHint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(RightAbove, \"RVtcTTAjOGtosF80/lM3mpi131o=\");\n_c = RightAbove;\nexport default RightAbove;\nvar _c;\n$RefreshReg$(_c, \"RightAbove\");","map":{"version":3,"names":["React","useEffect","useState","Question","HintBit","QuestionBank","jsxDEV","_jsxDEV","RightAbove","_s","_questions$currentQue","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","villagerNames","fetchQuestions","response","fetch","data","json","townQuestions","error","console","handleNextQuestion","prevIndex","length","getRandomName","randomIndex","Math","floor","random","randomVillagerName","showHint","setShowHint","toggleHint","prev","className","children","onNext","fileName","_jsxFileName","lineNumber","columnNumber","hint","onToggleHint","_c","$RefreshReg$"],"sources":["/Users/paulinewee/Desktop/girlhacks/sweetcode/sweetcode/src/components/townpage/RightField.js"],"sourcesContent":["// src/components/RightAbove.js\nimport React, { useEffect, useState } from 'react'\nimport Question from './Question' // Import the Question component\nimport HintBit from './HintBit'\nimport QuestionBank from './QuestionBank' // Import the QuestionBank component\n\nfunction RightAbove() {\n  const [questions, setQuestions] = useState([])\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n\n  const villagerNames = [\n    'BUBBLES THE BUNNY',\n    'MELVIN THE MOOSE',\n    'FELICITY THE FOX',\n    'NEDDY THE NARWHAL',\n    'PIPPIN THE PENGUIN',\n    'SILLY SAMMY THE SLOTH',\n    'LUCY THE LEMUR',\n    'DIZZY THE DOLPHIN',\n    'GIGGLES THE GIRAFFE',\n    'WOBBLES THE WOMBAT',\n  ]\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch('/data/townQuestions.json') // Fetch data from the JSON file\n        const data = await response.json()\n        setQuestions(data.townQuestions)\n      } catch (error) {\n        console.error('Error fetching questions:', error)\n      }\n    }\n\n    fetchQuestions()\n  }, [])\n\n  const handleNextQuestion = () => {\n    setCurrentQuestionIndex((prevIndex) => (prevIndex + 1) % questions.length) // Loop back to start if at the end\n  }\n\n  const getRandomName = () => {\n    const randomIndex = Math.floor(Math.random() * villagerNames.length)\n    return villagerNames[randomIndex]\n  }\n\n  const randomVillagerName = getRandomName()\n\n  const [showHint, setShowHint] = useState(false) // State to control hint visibility\n\n  const toggleHint = () => {\n    setShowHint((prev) => !prev) // Toggle the hint visibility\n  }\n\n  return (\n    <div className=\"h-[688px] ml-2 border-black border-2\">\n      <QuestionBank\n        questions={questions}\n        currentQuestionIndex={currentQuestionIndex}\n        onNext={handleNextQuestion}\n        randomVillagerName={randomVillagerName}\n      />\n      <HintBit\n        hint={questions[currentQuestionIndex]?.hint}\n        onToggleHint={toggleHint}\n        showHint={showHint}\n      />\n    </div>\n  )\n}\n\nexport default RightAbove\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}