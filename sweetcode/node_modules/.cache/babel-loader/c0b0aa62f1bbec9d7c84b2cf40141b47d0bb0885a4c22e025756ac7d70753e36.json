{"ast":null,"code":"var _jsxFileName = \"/Users/paulinewee/Desktop/girlhacks/sweetcode/sweetcode/src/components/townpage/HintBit.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HintBit({\n  hint,\n  onToggleHint,\n  showHint\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border-2 p-4 border-black bg-amber-200 h-[320px] overflow-y-auto mt-2 flex gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-1 p-4 border-1 border-black border-2 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hi! I'm Remy the Raccoon. I know these trees pretty well. If you need a hint for the question above, just let me know!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onToggleHint,\n        className: \"mt-2 p-2 bg-green-500 text-white\",\n        children: showHint ? 'Hide Hint' : 'Show Hint'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), showHint && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2\",\n        children: hint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 22\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/img/1-tree/raccoon.PNG\",\n      alt: \"\",\n      className: \"w-[200px]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = HintBit;\nexport default HintBit;\nvar _c;\n$RefreshReg$(_c, \"HintBit\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HintBit","hint","onToggleHint","showHint","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/paulinewee/Desktop/girlhacks/sweetcode/sweetcode/src/components/townpage/HintBit.js"],"sourcesContent":["import React from 'react'\n\nfunction HintBit({ hint, onToggleHint, showHint }) {\n  return (\n    <div className=\"border-2 p-4 border-black bg-amber-200 h-[320px] overflow-y-auto mt-2 flex gap-4\">\n      <div className=\"m-1 p-4 border-1 border-black border-2 bg-white\">\n        <p>\n          Hi! I'm Remy the Raccoon. I know these trees pretty well. If you need\n          a hint for the question above, just let me know!\n        </p>\n        <button\n          onClick={onToggleHint}\n          className=\"mt-2 p-2 bg-green-500 text-white\"\n        >\n          {showHint ? 'Hide Hint' : 'Show Hint'}\n        </button>\n        {showHint && <p className=\"mt-2\">{hint}</p>}{' '}\n        {/* Display the hint if showHint is true */}\n      </div>\n      <img src=\"/img/1-tree/raccoon.PNG\" alt=\"\" className=\"w-[200px]\" />\n    </div>\n  )\n}\n\nexport default HintBit\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,OAAOA,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEC;AAAS,CAAC,EAAE;EACjD,oBACEJ,OAAA;IAAKK,SAAS,EAAC,kFAAkF;IAAAC,QAAA,gBAC/FN,OAAA;MAAKK,SAAS,EAAC,iDAAiD;MAAAC,QAAA,gBAC9DN,OAAA;QAAAM,QAAA,EAAG;MAGH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJV,OAAA;QACEW,OAAO,EAAER,YAAa;QACtBE,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAE3CF,QAAQ,GAAG,WAAW,GAAG;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,EACRN,QAAQ,iBAAIJ,OAAA;QAAGK,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEJ;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAAE,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7C,CAAC,eACNV,OAAA;MAAKY,GAAG,EAAC,yBAAyB;MAACC,GAAG,EAAC,EAAE;MAACR,SAAS,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV;AAACI,EAAA,GApBQb,OAAO;AAsBhB,eAAeA,OAAO;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}