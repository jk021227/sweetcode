{"ast":null,"code":"var _jsxFileName = \"/Users/paulinewee/Desktop/girlhacks/sweetcode/sweetcode/src/components/townpage/RightField.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Question from './Question'; // Import the Question component\nimport HintBit from './HintBit';\nimport QuestionBank from './QuestionBank'; // Import the QuestionBank component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RightField() {\n  _s();\n  var _questions$currentQue;\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const villagerNames = ['BUBBLES THE BUNNY', 'MELVIN THE MOOSE', 'FELICITY THE FOX', 'NEDDY THE NARWHAL', 'PIPPIN THE PENGUIN', 'SILLY SAMMY THE SLOTH', 'LUCY THE LEMUR', 'DIZZY THE DOLPHIN', 'GIGGLES THE GIRAFFE', 'WOBBLES THE WOMBAT'];\n  const [randomVillagerName, setRandomVillagerName] = useState(''); // State to hold the random villager name\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch('/data/townQuestions.json'); // Fetch data from the JSON file\n        const data = await response.json();\n        setQuestions(data.townQuestions);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n    fetchQuestions();\n    // Set random villager name once when the component mounts\n    setRandomVillagerName(villagerNames[Math.floor(Math.random() * villagerNames.length)]);\n  }, []); // Empty dependency array ensures this runs only once on mount\n\n  const handleNextQuestion = () => {\n    setCurrentQuestionIndex(prevIndex => (prevIndex + 1) % questions.length); // Loop back to start if at the end\n    setShowHint(false); // Reset hint visibility when moving to the next question\n  };\n  const [showHint, setShowHint] = useState(false); // State to control hint visibility\n\n  const toggleHint = () => {\n    setShowHint(prev => !prev); // Toggle the hint visibility\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-amber-200 h-[688px] ml-2 border-black border-2\",\n    children: [/*#__PURE__*/_jsxDEV(QuestionBank, {\n      questions: questions,\n      currentQuestionIndex: currentQuestionIndex,\n      onNext: handleNextQuestion,\n      randomVillagerName: randomVillagerName // Pass the random villager name to QuestionBank\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HintBit, {\n      hint: (_questions$currentQue = questions[currentQuestionIndex]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.hint,\n      onToggleHint: toggleHint,\n      showHint: showHint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(RightField, \"zURCQFgKtccnw1Ztdd79+ChYhqY=\");\n_c = RightField;\nexport default RightField;\nvar _c;\n$RefreshReg$(_c, \"RightField\");","map":{"version":3,"names":["React","useEffect","useState","Question","HintBit","QuestionBank","jsxDEV","_jsxDEV","RightField","_s","_questions$currentQue","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","villagerNames","randomVillagerName","setRandomVillagerName","fetchQuestions","response","fetch","data","json","townQuestions","error","console","Math","floor","random","length","handleNextQuestion","prevIndex","setShowHint","showHint","toggleHint","prev","className","children","onNext","fileName","_jsxFileName","lineNumber","columnNumber","hint","onToggleHint","_c","$RefreshReg$"],"sources":["/Users/paulinewee/Desktop/girlhacks/sweetcode/sweetcode/src/components/townpage/RightField.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Question from './Question' // Import the Question component\nimport HintBit from './HintBit'\nimport QuestionBank from './QuestionBank' // Import the QuestionBank component\n\nfunction RightField() {\n  const [questions, setQuestions] = useState([])\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n\n  const villagerNames = [\n    'BUBBLES THE BUNNY',\n    'MELVIN THE MOOSE',\n    'FELICITY THE FOX',\n    'NEDDY THE NARWHAL',\n    'PIPPIN THE PENGUIN',\n    'SILLY SAMMY THE SLOTH',\n    'LUCY THE LEMUR',\n    'DIZZY THE DOLPHIN',\n    'GIGGLES THE GIRAFFE',\n    'WOBBLES THE WOMBAT',\n  ]\n\n  const [randomVillagerName, setRandomVillagerName] = useState('') // State to hold the random villager name\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch('/data/townQuestions.json') // Fetch data from the JSON file\n        const data = await response.json()\n        setQuestions(data.townQuestions)\n      } catch (error) {\n        console.error('Error fetching questions:', error)\n      }\n    }\n\n    fetchQuestions()\n    // Set random villager name once when the component mounts\n    setRandomVillagerName(\n      villagerNames[Math.floor(Math.random() * villagerNames.length)]\n    )\n  }, []) // Empty dependency array ensures this runs only once on mount\n\n  const handleNextQuestion = () => {\n    setCurrentQuestionIndex((prevIndex) => (prevIndex + 1) % questions.length) // Loop back to start if at the end\n    setShowHint(false) // Reset hint visibility when moving to the next question\n  }\n\n  const [showHint, setShowHint] = useState(false) // State to control hint visibility\n\n  const toggleHint = () => {\n    setShowHint((prev) => !prev) // Toggle the hint visibility\n  }\n\n  return (\n    <div className=\"bg-amber-200 h-[688px] ml-2 border-black border-2\">\n      <QuestionBank\n        questions={questions}\n        currentQuestionIndex={currentQuestionIndex}\n        onNext={handleNextQuestion}\n        randomVillagerName={randomVillagerName} // Pass the random villager name to QuestionBank\n      />\n      <HintBit\n        hint={questions[currentQuestionIndex]?.hint}\n        onToggleHint={toggleHint}\n        showHint={showHint}\n      />\n    </div>\n  )\n}\n\nexport default RightField\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}