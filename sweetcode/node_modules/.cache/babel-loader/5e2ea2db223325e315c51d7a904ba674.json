{"ast":null,"code":"var _jsxFileName = \"/Users/youngjukim/Desktop/sweetcode/sweetcode/src/towns/InterviewIsle.js\";\nimport React, { useState, useEffect } from 'react';\nconst InterviewIsle = () => {\n  const [question, setQuestion] = useState('');\n  const [tag, setTag] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [tutorResponse, setTutorResponse] = useState(''); // State for tutor response\n  const [isCorrect, setIsCorrect] = useState(false); // State for correctness\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const res = await fetch('/data/questions.json'); // Adjust the path as needed\n        if (!res.ok) throw new Error('Failed to fetch questions.');\n        const data = await res.json();\n        setQuestions(data);\n\n        // Randomly select a category and then a question from that category\n        const categories = Object.keys(data);\n        const randomCategoryIndex = Math.floor(Math.random() * categories.length);\n        const randomCategory = categories[randomCategoryIndex];\n        const questionsInCategory = data[randomCategory];\n        const randomQuestionIndex = Math.floor(Math.random() * questionsInCategory.length);\n\n        // Set the question and tag\n        const selectedQuestion = questionsInCategory[randomQuestionIndex];\n        setQuestion(selectedQuestion.yassifiedExample); // Set the question\n        setTag(randomCategory); // Set the tag based on the category\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n    fetchQuestions();\n  }, []); // Run once on component mount\n\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch('/interview', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question,\n          user_input: userInput\n        }) // Pass question and user input\n      });\n      if (res.ok) {\n        const data = await res.json();\n        setTutorResponse(data.response); // Set the tutor response\n        setIsCorrect(data.correct); // Set correctness\n      } else {\n        setTutorResponse('Error: Could not fetch response from server.');\n        setIsCorrect(false);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setTutorResponse('Error: Something went wrong.');\n      setIsCorrect(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Interview Isle\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm font-medium text-gray-700 flex items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Question\", tag && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-2 px-2 py-1 text-sm text-white bg-blue-500 rounded-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, tag)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-1 p-2 font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, question)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm font-medium text-gray-700\",\n    htmlFor: \"userInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Your Answer\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"userInput\",\n    value: userInput,\n    onChange: handleInputChange,\n    className: \"mt-1 p-2 border border-gray-300 rounded-md w-full h-24\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"mt-4 bg-blue-500 text-white p-2 rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm font-medium text-gray-700\",\n    htmlFor: \"TutorResponse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Tutor Response\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"TutorResponse\",\n    value: tutorResponse,\n    readOnly: true // Make the response textarea read-only\n    ,\n    className: \"mt-1 p-2 border border-gray-300 rounded-md w-full h-24 bg-gray-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-2 text-sm text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, isCorrect ? \"Your answer was correct!\" : \"Keep trying!\")));\n};\nexport default InterviewIsle;","map":{"version":3,"names":["React","useState","useEffect","InterviewIsle","question","setQuestion","tag","setTag","userInput","setUserInput","tutorResponse","setTutorResponse","isCorrect","setIsCorrect","questions","setQuestions","fetchQuestions","res","fetch","ok","Error","data","json","categories","Object","keys","randomCategoryIndex","Math","floor","random","length","randomCategory","questionsInCategory","randomQuestionIndex","selectedQuestion","yassifiedExample","error","console","handleInputChange","e","target","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","user_input","response","correct","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","type","readOnly"],"sources":["/Users/youngjukim/Desktop/sweetcode/sweetcode/src/towns/InterviewIsle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst InterviewIsle = () => {\n  const [question, setQuestion] = useState('');\n  const [tag, setTag] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [tutorResponse, setTutorResponse] = useState(''); // State for tutor response\n  const [isCorrect, setIsCorrect] = useState(false); // State for correctness\n  const [questions, setQuestions] = useState([]);\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const res = await fetch('/data/questions.json'); // Adjust the path as needed\n        if (!res.ok) throw new Error('Failed to fetch questions.');\n        const data = await res.json();\n        setQuestions(data);\n\n        // Randomly select a category and then a question from that category\n        const categories = Object.keys(data);\n        const randomCategoryIndex = Math.floor(Math.random() * categories.length);\n        const randomCategory = categories[randomCategoryIndex];\n        const questionsInCategory = data[randomCategory];\n        const randomQuestionIndex = Math.floor(Math.random() * questionsInCategory.length);\n        \n        // Set the question and tag\n        const selectedQuestion = questionsInCategory[randomQuestionIndex];\n        setQuestion(selectedQuestion.yassifiedExample); // Set the question\n        setTag(randomCategory); // Set the tag based on the category\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n\n    fetchQuestions();\n  }, []); // Run once on component mount\n\n  const handleInputChange = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await fetch('/interview', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ question, user_input: userInput }), // Pass question and user input\n      });\n\n      if (res.ok) {\n        const data = await res.json();\n        setTutorResponse(data.response); // Set the tutor response\n        setIsCorrect(data.correct); // Set correctness\n      } else {\n        setTutorResponse('Error: Could not fetch response from server.');\n        setIsCorrect(false);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setTutorResponse('Error: Something went wrong.');\n      setIsCorrect(false);\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold\">Interview Isle</h1>\n      <form onSubmit={handleSubmit} className=\"mt-4\">\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700 flex items-center\">\n            Question\n            {tag && (\n              <span className=\"ml-2 px-2 py-1 text-sm text-white bg-blue-500 rounded-full\">\n                {tag}\n              </span>\n            )}\n          </label>\n          {/* Display the question as bold text */}\n          <p className=\"mt-1 p-2 font-bold\">\n            {question}\n          </p>\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700\" htmlFor=\"userInput\">\n            Your Answer\n          </label>\n          <textarea\n            id=\"userInput\"\n            value={userInput}\n            onChange={handleInputChange}\n            className=\"mt-1 p-2 border border-gray-300 rounded-md w-full h-24\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"mt-4 bg-blue-500 text-white p-2 rounded-md\"\n        >\n          Submit\n        </button>\n      </form>\n      \n      {/* Tutor Response Box */}\n      <div className=\"mt-4\">\n        <label className=\"block text-sm font-medium text-gray-700\" htmlFor=\"TutorResponse\">\n          Tutor Response\n        </label>\n        <textarea\n          id=\"TutorResponse\"\n          value={tutorResponse}\n          readOnly // Make the response textarea read-only\n          className=\"mt-1 p-2 border border-gray-300 rounded-md w-full h-24 bg-gray-100\"\n        />\n        <p className=\"mt-2 text-sm text-gray-500\">\n          {isCorrect ? \"Your answer was correct!\" : \"Keep trying!\"}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default InterviewIsle;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}