{"ast":null,"code":"var _jsxFileName = \"/Users/youngjukim/Desktop/sweetcode/sweetcode/src/towns/InterviewIsle.js\";\nimport React, { useState, useEffect } from 'react';\nconst InterviewIsle = () => {\n  const [question, setQuestion] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [response, setResponse] = useState('');\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const res = await fetch('/data/questions.json'); // Adjust the path as needed\n        if (!res.ok) throw new Error('Failed to fetch questions.');\n        const data = await res.json();\n        setQuestions(data);\n\n        // Randomly select a question from the fetched questions\n        const randomIndex = Math.floor(Math.random() * data.length);\n        setQuestion(data[randomIndex].description.yassifiedExample); // Set the question\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n    fetchQuestions();\n  }, []); // Run once on component mount\n\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch('/interview', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question,\n          userInput\n        })\n      });\n      if (res.ok) {\n        const data = await res.json();\n        setResponse(data.content); // Assuming the backend returns { content: ... }\n      } else {\n        setResponse('Error: Could not fetch response from server.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setResponse('Error: Something went wrong.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Interview Isle\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm font-medium text-gray-700\",\n    htmlFor: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Question\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"question\",\n    value: question,\n    readOnly: true // Make the question input read-only\n    ,\n    className: \"mt-1 p-2 border border-gray-300 rounded-md w-full bg-gray-100\" // Optional: Change background for read-only\n    ,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm font-medium text-gray-700\",\n    htmlFor: \"userInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Your Answer\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"userInput\",\n    value: userInput,\n    onChange: handleInputChange,\n    className: \"mt-1 p-2 border border-gray-300 rounded-md w-full h-24\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"mt-4 bg-blue-500 text-white p-2 rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Submit\")), response && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4 p-2 border border-gray-300 rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Response:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, response)));\n};\nexport default InterviewIsle;","map":{"version":3,"names":["React","useState","useEffect","InterviewIsle","question","setQuestion","userInput","setUserInput","response","setResponse","questions","setQuestions","fetchQuestions","res","fetch","ok","Error","data","json","randomIndex","Math","floor","random","length","description","yassifiedExample","error","console","handleInputChange","e","target","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","content","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","readOnly","required","onChange"],"sources":["/Users/youngjukim/Desktop/sweetcode/sweetcode/src/towns/InterviewIsle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst InterviewIsle = () => {\n  const [question, setQuestion] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [response, setResponse] = useState('');\n  const [questions, setQuestions] = useState([]);\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const res = await fetch('/data/questions.json'); // Adjust the path as needed\n        if (!res.ok) throw new Error('Failed to fetch questions.');\n        const data = await res.json();\n        setQuestions(data);\n        \n        // Randomly select a question from the fetched questions\n        const randomIndex = Math.floor(Math.random() * data.length);\n        setQuestion(data[randomIndex].description.yassifiedExample); // Set the question\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n\n    fetchQuestions();\n  }, []); // Run once on component mount\n\n  const handleInputChange = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await fetch('/interview', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ question, userInput }),\n      });\n\n      if (res.ok) {\n        const data = await res.json();\n        setResponse(data.content); // Assuming the backend returns { content: ... }\n      } else {\n        setResponse('Error: Could not fetch response from server.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setResponse('Error: Something went wrong.');\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold\">Interview Isle</h1>\n      <form onSubmit={handleSubmit} className=\"mt-4\">\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700\" htmlFor=\"question\">\n            Question\n          </label>\n          <input\n            type=\"text\"\n            id=\"question\"\n            value={question}\n            readOnly // Make the question input read-only\n            className=\"mt-1 p-2 border border-gray-300 rounded-md w-full bg-gray-100\" // Optional: Change background for read-only\n            required\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700\" htmlFor=\"userInput\">\n            Your Answer\n          </label>\n          <textarea\n            id=\"userInput\"\n            value={userInput}\n            onChange={handleInputChange}\n            className=\"mt-1 p-2 border border-gray-300 rounded-md w-full h-24\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"mt-4 bg-blue-500 text-white p-2 rounded-md\"\n        >\n          Submit\n        </button>\n      </form>\n      {response && (\n        <div className=\"mt-4 p-2 border border-gray-300 rounded-md\">\n          <h2 className=\"font-semibold\">Response:</h2>\n          <p>{response}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InterviewIsle;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}