{"ast":null,"code":"var _jsxFileName = \"/Users/paulinewee/Desktop/girlhacks/sweetcode/sweetcode/src/components/townpage/LeftField.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Module from './Module';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LeftField() {\n  _s();\n  const [selectedModule, setSelectedModule] = useState(null); // State to manage the selected module for modal\n  const [modules, setModules] = useState([]); // State to hold the modules\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to manage modal visibility\n\n  // Fetching the modules from the JSON file\n  useEffect(() => {\n    const fetchModules = async () => {\n      try {\n        const response = await fetch('/data/modules.json');\n        const data = await response.json();\n        setModules(data); // Set the modules to state\n      } catch (error) {\n        console.error('Error fetching the modules: ', error);\n      }\n    };\n    fetchModules();\n  }, []);\n  const handleModuleClick = module => {\n    setSelectedModule(module); // Set the clicked module's data\n    setIsModalOpen(true); // Open the modal\n  };\n  const closeModal = () => {\n    setIsModalOpen(false); // Close the modal\n    setSelectedModule(null); // Reset selected module\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main h-[688px] font-mono p-12 overflow-y-auto bg-green-50 border-2 border-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[300px] bg-white border-2 px-4 py-2 text-center m-auto border-black\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"KNOWLEDGE BANK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-5 w-full my-10\",\n      children: modules.map((module, index) => /*#__PURE__*/_jsxDEV(Module, {\n        moduleName: module.name,\n        moduleID: module.id,\n        onClick: () => handleModuleClick(module)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isModalOpen && selectedModule && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-0 w-[500px] h-[90%] bg-white border p-6 overflow-y-scroll z-50 mt-20 my-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        className: \"mt-4 p-2 bg-green-500 text-white\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold my-6\",\n        children: selectedModule.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Key Properties:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), ' ', selectedModule.description.keyProperties]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Example:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), ' ', selectedModule.description.yassifiedExample]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"LeetCode Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedModule.description.leetcodeQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Code Example:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-gray-100 p-2 rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: selectedModule.description.codeExample\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(LeftField, \"x0DCvTmOzzhpj53qmt6k/4/Y80A=\");\n_c = LeftField;\nexport default LeftField;\nvar _c;\n$RefreshReg$(_c, \"LeftField\");","map":{"version":3,"names":["React","useEffect","useState","Module","jsxDEV","_jsxDEV","LeftField","_s","selectedModule","setSelectedModule","modules","setModules","isModalOpen","setIsModalOpen","fetchModules","response","fetch","data","json","error","console","handleModuleClick","module","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","moduleName","name","moduleID","id","onClick","description","keyProperties","yassifiedExample","leetcodeQuestions","question","codeExample","_c","$RefreshReg$"],"sources":["/Users/paulinewee/Desktop/girlhacks/sweetcode/sweetcode/src/components/townpage/LeftField.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Module from './Module'\n\nfunction LeftField() {\n  const [selectedModule, setSelectedModule] = useState(null) // State to manage the selected module for modal\n  const [modules, setModules] = useState([]) // State to hold the modules\n  const [isModalOpen, setIsModalOpen] = useState(false) // State to manage modal visibility\n\n  // Fetching the modules from the JSON file\n  useEffect(() => {\n    const fetchModules = async () => {\n      try {\n        const response = await fetch('/data/modules.json')\n        const data = await response.json()\n        setModules(data) // Set the modules to state\n      } catch (error) {\n        console.error('Error fetching the modules: ', error)\n      }\n    }\n    fetchModules()\n  }, [])\n\n  const handleModuleClick = (module) => {\n    setSelectedModule(module) // Set the clicked module's data\n    setIsModalOpen(true) // Open the modal\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false) // Close the modal\n    setSelectedModule(null) // Reset selected module\n  }\n\n  return (\n    <div className=\"main h-[688px] font-mono p-12 overflow-y-auto bg-green-50 border-2 border-black\">\n      <div className=\"w-[300px] bg-white border-2 px-4 py-2 text-center m-auto border-black\">\n        <h2>KNOWLEDGE BANK</h2>\n      </div>\n      <div className=\"grid grid-cols-3 gap-5 w-full my-10\">\n        {modules.map((module, index) => (\n          <Module\n            key={index}\n            moduleName={module.name}\n            moduleID={module.id}\n            onClick={() => handleModuleClick(module)}\n          />\n        ))}\n      </div>\n\n      {/* Modal */}\n      {isModalOpen && selectedModule && (\n        <div className=\"absolute top-0 left-0 w-[500px] h-[90%] bg-white border p-6 overflow-y-scroll z-50 mt-20 my-auto\">\n          <button\n            onClick={closeModal}\n            className=\"mt-4 p-2 bg-green-500 text-white\"\n          >\n            Back\n          </button>\n          <h2 className=\"text-xl font-bold my-6\">{selectedModule.name}</h2>\n          <p>\n            <strong>Key Properties:</strong>{' '}\n            {selectedModule.description.keyProperties}\n          </p>\n          <br />\n          <p>\n            <strong>Example:</strong>{' '}\n            {selectedModule.description.yassifiedExample}\n          </p>\n          <br />\n          <p>\n            <strong>LeetCode Questions:</strong>\n          </p>\n          <ul>\n            {selectedModule.description.leetcodeQuestions.map(\n              (question, index) => (\n                <li key={index}>{question}</li>\n              )\n            )}\n          </ul>\n          <br />\n          <p>\n            <strong>Code Example:</strong>\n          </p>\n          <pre className=\"bg-gray-100 p-2 rounded\">\n            <code>{selectedModule.description.codeExample}</code>\n          </pre>\n          {/* You can add more detailed information from JSON here */}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default LeftField\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}