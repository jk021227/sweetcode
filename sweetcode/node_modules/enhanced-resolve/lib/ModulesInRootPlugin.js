/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
<<<<<<< HEAD

"use strict";

/** @typedef {import("./Resolver")} Resolver */
/** @typedef {import("./Resolver").ResolveRequest} ResolveRequest */
/** @typedef {import("./Resolver").ResolveStepHook} ResolveStepHook */

module.exports = class ModulesInRootPlugin {
	/**
	 * @param {string | ResolveStepHook} source source
	 * @param {string} path path
	 * @param {string | ResolveStepHook} target target
	 */
=======
"use strict";

module.exports = class ModulesInRootPlugin {
>>>>>>> 8aded176e2bf64ab331edd712b5a251ef6940ffa
	constructor(source, path, target) {
		this.source = source;
		this.path = path;
		this.target = target;
	}

<<<<<<< HEAD
	/**
	 * @param {Resolver} resolver the resolver
	 * @returns {void}
	 */
=======
>>>>>>> 8aded176e2bf64ab331edd712b5a251ef6940ffa
	apply(resolver) {
		const target = resolver.ensureHook(this.target);
		resolver
			.getHook(this.source)
			.tapAsync("ModulesInRootPlugin", (request, resolveContext, callback) => {
<<<<<<< HEAD
				/** @type {ResolveRequest} */
				const obj = {
					...request,
					path: this.path,
					request: "./" + request.request,
					module: false
				};
=======
				const obj = Object.assign({}, request, {
					path: this.path,
					request: "./" + request.request
				});
>>>>>>> 8aded176e2bf64ab331edd712b5a251ef6940ffa
				resolver.doResolve(
					target,
					obj,
					"looking for modules in " + this.path,
					resolveContext,
					callback
				);
			});
	}
};
